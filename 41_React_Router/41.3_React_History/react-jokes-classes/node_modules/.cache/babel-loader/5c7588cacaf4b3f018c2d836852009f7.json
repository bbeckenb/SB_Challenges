{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeListClass.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport JokeClass from \"./JokeClass\";\nimport './JokeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeListClass extends React.Component {\n  constructor(props) {\n    let numJokesToGet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.numJokesToGet = numJokesToGet;\n  }\n\n  async componentDidMount() {\n    await this.getJokes();\n  }\n\n  async getJokes() {\n    let j = [...this.state.jokes];\n    let seenJokes = new Set();\n\n    try {\n      while (j.length < this.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        jokes: j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  vote(id, delta) {\n    let updateVote = this.state.jokes.map(j => j.id === id ? { ...j,\n      votes: j.votes + delta\n    } : j);\n    this.setState({\n      jokes: updateVote\n    });\n  }\n\n  render() {\n    // if (this.state.jokes.length) {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.getJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(JokeClass, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this); //   }\n    //   return null;\n  }\n\n}\n\nexport default JokeListClass;","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeListClass.js"],"names":["React","axios","JokeClass","JokeListClass","Component","constructor","props","numJokesToGet","state","jokes","componentDidMount","getJokes","j","seenJokes","Set","length","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","setState","e","log","vote","delta","updateVote","map","render","sortedJokes","sort","a","b","joke"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport JokeClass from \"./JokeClass\";\nimport './JokeList.css';\n\nclass JokeListClass extends React.Component {\n    constructor(props, numJokesToGet=10) {\n        super(props);\n        this.state = {jokes: []};\n        this.numJokesToGet = numJokesToGet;\n    }\n\n    async componentDidMount() {\n       await this.getJokes();\n    }\n\n    async getJokes() {\n        let j = [...this.state.jokes];\n        let seenJokes = new Set();\n        try {\n          while (j.length < this.numJokesToGet) {\n            let res = await axios.get(\"https://icanhazdadjoke.com\", {\n              headers: { Accept: \"application/json\" }\n            });\n            let { status, ...jokeObj } = res.data;\n    \n            if (!seenJokes.has(jokeObj.id)) {\n              seenJokes.add(jokeObj.id);\n              j.push({ ...jokeObj, votes: 0 });\n            } else {\n              console.error(\"duplicate found!\");\n            }\n          }\n          this.setState({jokes: j});\n        } catch (e) {\n          console.log(e);\n        }\n    }\n\n    vote(id, delta) {\n        let updateVote = this.state.jokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j));\n        this.setState({jokes: updateVote});\n    }\n\n    render() {\n        // if (this.state.jokes.length) {\n            let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n          \n            return (\n              <div className=\"JokeList\">\n                <button className=\"JokeList-getmore\" onClick={this.getJokes}>\n                  Get New Jokes\n                </button>\n          \n                {sortedJokes.map(j => (\n                  <JokeClass text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={this.vote} />\n                ))}\n              </div>\n            );\n        //   }\n        \n        //   return null;\n    }\n\n}\n\nexport default JokeListClass;"]},"metadata":{},"sourceType":"module"}