{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport JokeClass from \"./JokeClass\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JokeList(_ref) {\n  _s();\n\n  let {\n    numJokesToGet = 10\n  } = _ref;\n  const [jokes, setJokes] = useState([]);\n  /* get jokes if there are no jokes */\n\n  useEffect(function () {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            status,\n            ...jokeObj\n          } = res.data;\n\n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({ ...jokeObj,\n              votes: 0\n            });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n\n        setJokes(j);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n  /* empty joke list and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  function vote(id, delta) {\n    setJokes(Jokes => allJokes.mallap(j => j.id === id ? { ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n  /* render: either loading spinner or list of sorted jokes. */\n\n\n  if (jokes.length) {\n    let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(JokeClass, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\n_s(JokeList, \"nB/61W1LYUTCSD3Mxe/JmlQbdRQ=\");\n\n_c = JokeList;\nexport default JokeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeList.js"],"names":["React","useState","useEffect","axios","Joke","JokeClass","JokeList","numJokesToGet","jokes","setJokes","getJokes","j","seenJokes","Set","length","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","e","log","generateNewJokes","vote","delta","Jokes","allJokes","mallap","sortedJokes","sort","a","b","map","joke"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport JokeClass from \"./JokeClass\";\nimport \"./JokeList.css\";\n\nfunction JokeList({ numJokesToGet = 10 }) {\n  const [jokes, setJokes] = useState([]);\n\n  /* get jokes if there are no jokes */\n\n  useEffect(function() {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { status, ...jokeObj } = res.data;\n  \n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({ ...jokeObj, votes: 0 });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n        setJokes(j);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  function generateNewJokes() {\n    setJokes([]);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  function vote(id, delta) {\n    setJokes(Jokes =>\n      allJokes.mallap(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  if (jokes.length) {\n    let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  \n    return (\n      <div className=\"JokeList\">\n        <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n          Get New Jokes\n        </button>\n  \n        {sortedJokes.map(j => (\n          <JokeClass text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n\n}\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}