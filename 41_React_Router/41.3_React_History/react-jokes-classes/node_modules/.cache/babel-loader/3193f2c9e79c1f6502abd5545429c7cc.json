{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeListClass.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport JokeClass from \"./JokeClass\";\nimport './JokeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeListClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.numJokesToGet = props.numJokesToGet;\n    this.getJokes = this.getJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getJokes();\n  }\n\n  async getJokes() {\n    let j = [];\n    let seenJokes = new Set();\n\n    try {\n      while (j.length < this.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        jokes: j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  vote(id, delta) {\n    console.log(this.state.jokes);\n    let updateVote = this.state.jokes.map(j => j.id === id ? { ...j,\n      votes: j.votes + delta\n    } : j);\n    this.setState({\n      jokes: updateVote\n    });\n  }\n\n  render() {\n    if (this.state.jokes.length) {\n      let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"JokeList\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"JokeList-getmore\",\n          onClick: this.getJokes,\n          children: \"Get New Jokes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(JokeClass, {\n          text: j.joke,\n          id: j.id,\n          votes: j.votes,\n          vote: this.vote\n        }, j.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this);\n    } //   return null;\n\n  }\n\n}\n\nexport default JokeListClass;","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeListClass.js"],"names":["React","axios","JokeClass","JokeListClass","Component","constructor","props","state","jokes","numJokesToGet","getJokes","bind","vote","componentDidMount","j","seenJokes","Set","length","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","setState","e","log","delta","updateVote","map","render","sortedJokes","sort","a","b","joke"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport JokeClass from \"./JokeClass\";\nimport './JokeList.css';\n\nclass JokeListClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {jokes: []};\n        this.numJokesToGet = props.numJokesToGet;\n        this.getJokes = this.getJokes.bind(this);\n        this.vote = this.vote.bind(this);\n    }\n\n    async componentDidMount() {\n       await this.getJokes();\n    }\n\n    async getJokes() {\n        let j = [];\n        let seenJokes = new Set();\n        try {\n          while (j.length < this.numJokesToGet) {\n            let res = await axios.get(\"https://icanhazdadjoke.com\", {\n              headers: { Accept: \"application/json\" }\n            });\n            let { status, ...jokeObj } = res.data;\n    \n            if (!seenJokes.has(jokeObj.id)) {\n              seenJokes.add(jokeObj.id);\n              j.push({ ...jokeObj, votes: 0 });\n            } else {\n              console.error(\"duplicate found!\");\n            }\n          }\n          this.setState({jokes: j});\n        } catch (e) {\n          console.log(e);\n        }\n    }\n\n    vote(id, delta) {\n        console.log(this.state.jokes)\n        let updateVote = this.state.jokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j));\n        this.setState({jokes: updateVote});\n    }\n\n    render() {\n        if (this.state.jokes.length) {\n            let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n          \n            return (\n              <div className=\"JokeList\">\n                <button className=\"JokeList-getmore\" onClick={this.getJokes}>\n                  Get New Jokes\n                </button>\n          \n                {sortedJokes.map(j => (\n                  <JokeClass text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={this.vote} />\n                ))}\n              </div>\n            );\n          }\n        \n        //   return null;\n    }\n\n}\n\nexport default JokeListClass;"]},"metadata":{},"sourceType":"module"}