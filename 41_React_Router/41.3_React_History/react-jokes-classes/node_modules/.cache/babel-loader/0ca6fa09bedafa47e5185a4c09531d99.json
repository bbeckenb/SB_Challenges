{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeListClass.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport JokeClass from \"./JokeClass\";\nimport './JokeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeListClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.numJokesToGet = 10;\n    this.getJokes = this.getJokes.bind(this);\n    this.vote = this.vote.bind.this;\n  }\n\n  async componentDidMount() {\n    await this.getJokes();\n  }\n\n  async getJokes() {\n    let j = [...this.state.jokes];\n    console.log(j);\n    let seenJokes = new Set();\n\n    try {\n      console.log(this.numJokesToGet);\n\n      while (j.length < this.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setState({\n        jokes: j\n      });\n      console.log(j);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  vote(id, delta) {\n    console.log(this.state.jokes);\n    let updateVote = this.state.jokes.map(j => j.id === id ? { ...j,\n      votes: j.votes + delta\n    } : j);\n    this.setState({\n      jokes: updateVote\n    });\n  }\n\n  render() {\n    // if (this.state.jokes.length) {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"JokeList\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.getJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(JokeClass, {\n        text: j.joke,\n        id: j.id,\n        votes: j.votes,\n        vote: this.vote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this); //   }\n    //   return null;\n  }\n\n}\n\nexport default JokeListClass;","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.3_React_History/react-jokes-classes/src/JokeListClass.js"],"names":["React","axios","JokeClass","JokeListClass","Component","constructor","props","state","jokes","numJokesToGet","getJokes","bind","vote","this","componentDidMount","j","console","log","seenJokes","Set","length","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","error","setState","e","delta","updateVote","map","render","sortedJokes","sort","a","b","joke"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport JokeClass from \"./JokeClass\";\nimport './JokeList.css';\n\nclass JokeListClass extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {jokes: []};\n        this.numJokesToGet = 10;\n        this.getJokes = this.getJokes.bind(this);\n        this.vote = this.vote.bind.this\n    }\n\n    async componentDidMount() {\n       await this.getJokes();\n    }\n\n    async getJokes() {\n        let j = [...this.state.jokes];\n        console.log(j)\n        let seenJokes = new Set();\n        try {\n            console.log(this.numJokesToGet)\n          while (j.length < this.numJokesToGet) {\n            let res = await axios.get(\"https://icanhazdadjoke.com\", {\n              headers: { Accept: \"application/json\" }\n            });\n            let { status, ...jokeObj } = res.data;\n    \n            if (!seenJokes.has(jokeObj.id)) {\n              seenJokes.add(jokeObj.id);\n              j.push({ ...jokeObj, votes: 0 });\n            } else {\n              console.error(\"duplicate found!\");\n            }\n          }\n          this.setState({jokes: j});\n          console.log(j)\n\n        } catch (e) {\n          console.log(e);\n        }\n    }\n\n    vote(id, delta) {\n        console.log(this.state.jokes)\n        let updateVote = this.state.jokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j));\n        this.setState({jokes: updateVote});\n    }\n\n    render() {\n        // if (this.state.jokes.length) {\n            let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n          \n            return (\n              <div className=\"JokeList\">\n                <button className=\"JokeList-getmore\" onClick={this.getJokes}>\n                  Get New Jokes\n                </button>\n          \n                {sortedJokes.map(j => (\n                  <JokeClass text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={this.vote} />\n                ))}\n              </div>\n            );\n        //   }\n        \n        //   return null;\n    }\n\n}\n\nexport default JokeListClass;"]},"metadata":{},"sourceType":"module"}