{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/DeadlyDoubles.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { hasDoubles, rollDice, sum } from \"./utils\";\n/** DeadlyDoubles: a simple dice-rolling game.\n *\n * Keep rolling until sum of dice >= goal (win) or until you get doubles (lose)\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined (still being played)\n *\n * State:\n * - vals: values of dice\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeadlyDoubles(_ref) {\n  _s();\n\n  let {\n    numDice = 3,\n    numSides = 6,\n    addWin,\n    addLoss,\n    gameState\n  } = _ref;\n  const [vals, setVals] = useState(Array(numDice).fill(null));\n  const goal = Math.floor(numDice * (numSides / 2));\n  /** roll dice: if won/lost, tell Table (parent) that. Update state. */\n\n  function roll(evt) {\n    let vals = rollDice(numDice, numSides);\n\n    if (sum(vals) >= goal) {\n      addWin();\n    } else if (hasDoubles(vals)) {\n      addLoss();\n    }\n\n    setVals(vals);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeadlyDoubles\",\n    children: [/*#__PURE__*/_jsxDEV(DiceSet, {\n      vals: vals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Need: \", goal, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"Sum: \", sum(vals), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), gameState ? /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"You \", gameState, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: roll,\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeadlyDoubles, \"+1VgRYnZR3X6QVUlT7ZsTXfbkmQ=\");\n\n_c = DeadlyDoubles;\nexport default DeadlyDoubles;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeadlyDoubles\");","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/DeadlyDoubles.js"],"names":["React","useState","DiceSet","hasDoubles","rollDice","sum","DeadlyDoubles","numDice","numSides","addWin","addLoss","gameState","vals","setVals","Array","fill","goal","Math","floor","roll","evt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,GAA/B,QAA0C,SAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,aAAT,OAMG;AAAA;;AAAA,MANoB;AACrBC,IAAAA,OAAO,GAAG,CADW;AAErBC,IAAAA,QAAQ,GAAG,CAFU;AAGrBC,IAAAA,MAHqB;AAIrBC,IAAAA,OAJqB;AAKrBC,IAAAA;AALqB,GAMpB;AACD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACa,KAAK,CAACP,OAAD,CAAL,CAAeQ,IAAf,CAAoB,IAApB,CAAD,CAAhC;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWX,OAAO,IAAIC,QAAQ,GAAG,CAAf,CAAlB,CAAb;AAEA;;AAEA,WAASW,IAAT,CAAcC,GAAd,EAAmB;AACjB,QAAIR,IAAI,GAAGR,QAAQ,CAACG,OAAD,EAAUC,QAAV,CAAnB;;AAEA,QAAIH,GAAG,CAACO,IAAD,CAAH,IAAaI,IAAjB,EAAuB;AACrBP,MAAAA,MAAM;AACP,KAFD,MAEO,IAAIN,UAAU,CAACS,IAAD,CAAd,EAAsB;AAC3BF,MAAAA,OAAO;AACR;;AAEDG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,6BAAUI,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4BAASX,GAAG,CAACO,IAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGD,SAAS,gBACR;AAAA,2BAAQA,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAGR;AAAQ,QAAA,OAAO,EAAEQ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtCQb,a;;KAAAA,a;AAwCT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { hasDoubles, rollDice, sum } from \"./utils\";\n\n/** DeadlyDoubles: a simple dice-rolling game.\n *\n * Keep rolling until sum of dice >= goal (win) or until you get doubles (lose)\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined (still being played)\n *\n * State:\n * - vals: values of dice\n *\n */\n\nfunction DeadlyDoubles({\n  numDice = 3,\n  numSides = 6,\n  addWin,\n  addLoss,\n  gameState\n}) {\n  const [vals, setVals] = useState(Array(numDice).fill(null));\n  const goal = Math.floor(numDice * (numSides / 2));\n\n  /** roll dice: if won/lost, tell Table (parent) that. Update state. */\n\n  function roll(evt) {\n    let vals = rollDice(numDice, numSides);\n\n    if (sum(vals) >= goal) {\n      addWin();\n    } else if (hasDoubles(vals)) {\n      addLoss();\n    }\n\n    setVals(vals);\n  }\n\n  return (\n    <div className=\"DeadlyDoubles\">\n      <DiceSet vals={vals} />\n      <div>\n        <i>Need: {goal} </i>\n        <i>Sum: {sum(vals)} </i>\n        {gameState ? (\n          <b>You {gameState}!</b>\n        ) : (\n          <button onClick={roll}>Roll</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DeadlyDoubles;\n"]},"metadata":{},"sourceType":"module"}