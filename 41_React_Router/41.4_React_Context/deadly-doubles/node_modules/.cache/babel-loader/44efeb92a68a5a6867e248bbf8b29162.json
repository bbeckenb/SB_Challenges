{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/Casino.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Tables from \"./Tables\";\nimport DiceColorContext from \"./DiceColorContext\";\n/** Rithm Casino!\n *\n * This lets players choose a lucky color, and shows the game tables.\n *\n * Props:\n * - list of [[color-val, color-name], ...] for drop-down menu of colors\n *\n * State:\n * - diceColor: current color to use for dice (this becomes a \"context\")\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Casino(_ref) {\n  _s();\n\n  let {\n    colors = [[\"darkgreen\", \"Dark Green\"], [\"tomato\", \"Tomato\"], [\"darkblue\", \"Dark Blue\"], [\"#789\", \"Seven Eight Nine\"], [\"olive\", \"Olive\"]]\n  } = _ref;\n  const [diceColor, setDiceColor] = useState(colors[0][0]);\n\n  function handleChangeColor(evt) {\n    setDiceColor(evt.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Casino\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rithm Casino!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"As long as you keep losing, \", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"drinks are on the house\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Select Your Lucky Dice Color: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChangeColor,\n        children: colors.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c[0],\n          children: c[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiceColorContext.Provider, {\n      value: diceColor,\n      children: /*#__PURE__*/_jsxDEV(Tables, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Casino, \"+flPQfPWRpwbuIpiM00qeI98cdE=\");\n\n_c = Casino;\nexport default Casino;\n\nvar _c;\n\n$RefreshReg$(_c, \"Casino\");","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/Casino.js"],"names":["React","useState","Tables","DiceColorContext","Casino","colors","diceColor","setDiceColor","handleChangeColor","evt","target","value","map","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,MAAT,OAQG;AAAA;;AAAA,MARa;AACdC,IAAAA,MAAM,GAAG,CACP,CAAC,WAAD,EAAc,YAAd,CADO,EAEP,CAAC,QAAD,EAAW,QAAX,CAFO,EAGP,CAAC,UAAD,EAAa,WAAb,CAHO,EAIP,CAAC,MAAD,EAAS,kBAAT,CAJO,EAKP,CAAC,OAAD,EAAU,OAAV,CALO;AADK,GAQb;AACD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACI,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,CAA1C;;AACA,WAASG,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9BF,IAAAA,YAAY,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8DAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,QAAQ,EAAEH,iBAAlB;AAAA,kBACGH,MAAM,CAACO,GAAP,CAAWC,CAAC,iBACX;AAAQ,UAAA,KAAK,EAAEA,CAAC,CAAC,CAAD,CAAhB;AAAA,oBAAsBA,CAAC,CAAC,CAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAgBE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,MAAA,KAAK,EAAEP,SAAlC;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApCQF,M;;KAAAA,M;AAsCT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Tables from \"./Tables\";\n\nimport DiceColorContext from \"./DiceColorContext\";\n\n/** Rithm Casino!\n *\n * This lets players choose a lucky color, and shows the game tables.\n *\n * Props:\n * - list of [[color-val, color-name], ...] for drop-down menu of colors\n *\n * State:\n * - diceColor: current color to use for dice (this becomes a \"context\")\n *\n */\n\nfunction Casino({\n  colors = [\n    [\"darkgreen\", \"Dark Green\"],\n    [\"tomato\", \"Tomato\"],\n    [\"darkblue\", \"Dark Blue\"],\n    [\"#789\", \"Seven Eight Nine\"],\n    [\"olive\", \"Olive\"]\n  ]\n}) {\n  const [diceColor, setDiceColor] = useState(colors[0][0]);\n  function handleChangeColor(evt) {\n    setDiceColor(evt.target.value);\n  }\n\n  return (\n    <div className=\"Casino\">\n      <h1>Rithm Casino!</h1>\n      <p>\n        As long as you keep losing, <i>drinks are on the house</i>\n      </p>\n\n      <p>\n        <b>Select Your Lucky Dice Color: </b>\n        <select onChange={handleChangeColor}>\n          {colors.map(c => (\n            <option value={c[0]}>{c[1]}</option>\n          ))}\n        </select>\n      </p>\n\n      {/* wrap in \"context provider\", so descendants can access color */}\n      <DiceColorContext.Provider value={diceColor}>\n        <Tables />\n      </DiceColorContext.Provider>\n    </div>\n  );\n}\n\nexport default Casino;\n"]},"metadata":{},"sourceType":"module"}