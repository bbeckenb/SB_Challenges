{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/RollEm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { rollDice } from \"./utils\";\n/** Roll: a simple dice-rolling game.\n *\n * Keep rolling dice -- there's no real win/loss.\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined [if still playing]\n *              in this game, every roll \"wins\"\n *\n * State:\n * - vals: values of dice\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RollEm(_ref) {\n  _s();\n\n  let {\n    numDice = 3,\n    numSides = 6,\n    gameState,\n    addWin\n  } = _ref;\n  const [vals, setVals] = useState(Array(numDice).fill());\n\n  function roll(evt) {\n    setVals(rollDice(numDice, numSides)); // \"hey, kids --- every game's a winner! isn't gambling *fun*?\"\n\n    addWin();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RollEm\",\n    children: [/*#__PURE__*/_jsxDEV(DiceSet, {\n      vals: vals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), gameState ? /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [\"You \", gameState, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: roll,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RollEm, \"7uDzs6/OlCSDfp6dgddSSyXdZwY=\");\n\n_c = RollEm;\nexport default RollEm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RollEm\");","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/RollEm.js"],"names":["React","useState","DiceSet","rollDice","RollEm","numDice","numSides","gameState","addWin","vals","setVals","Array","fill","roll","evt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,MAAT,OAAkE;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,OAAO,GAAG,CAAZ;AAAeC,IAAAA,QAAQ,GAAG,CAA1B;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,GAAkD;AAChE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,KAAK,CAACN,OAAD,CAAL,CAAeO,IAAf,EAAD,CAAhC;;AACA,WAASC,IAAT,CAAcC,GAAd,EAAmB;AACjBJ,IAAAA,OAAO,CAACP,QAAQ,CAACE,OAAD,EAAUC,QAAV,CAAT,CAAP,CADiB,CAEjB;;AACAE,IAAAA,MAAM;AACP;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,SAAS,gBACR;AAAA,yBAAQA,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAQ,MAAA,OAAO,EAAEM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlBQT,M;;KAAAA,M;AAoBT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { rollDice } from \"./utils\";\n\n/** Roll: a simple dice-rolling game.\n *\n * Keep rolling dice -- there's no real win/loss.\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined [if still playing]\n *              in this game, every roll \"wins\"\n *\n * State:\n * - vals: values of dice\n *\n */\n\nfunction RollEm({ numDice = 3, numSides = 6, gameState, addWin }) {\n  const [vals, setVals] = useState(Array(numDice).fill());\n  function roll(evt) {\n    setVals(rollDice(numDice, numSides));\n    // \"hey, kids --- every game's a winner! isn't gambling *fun*?\"\n    addWin();\n  }\n\n  return (\n    <div className=\"RollEm\">\n      <DiceSet vals={vals} />\n      {gameState ? (\n        <b>You {gameState}!</b>\n      ) : (\n        <button onClick={roll}>Roll</button>\n      )}\n    </div>\n  );\n}\n\nexport default RollEm;\n"]},"metadata":{},"sourceType":"module"}