{"ast":null,"code":"var _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/PsychicDice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { rollDice } from \"./utils\";\n/** Psychic Dice: a simple dice-rolling \"game\".\n *\n * Dice are rolled; you indicate whether you psychically \"knew\" them or not\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined (still being played)\n *\n * State:\n * - vals: values of dice\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PsychicDice(_ref) {\n  _s();\n\n  let {\n    numDice = 3,\n    numSides = 6,\n    addWin,\n    addLoss,\n    gameState\n  } = _ref;\n  const [vals, setVals] = useState(Array(numDice).fill());\n  const [unrolled, setUnrolled] = useState(true);\n\n  function roll(evt) {\n    setVals(rollDice(numDice, numSides));\n    setUnrolled(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PsychicDice\",\n    children: [/*#__PURE__*/_jsxDEV(DiceSet, {\n      vals: vals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gameState ? /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"You \", gameState, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : unrolled ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: roll,\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addWin,\n          children: \"Yep!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addLoss,\n          children: \"Nope!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PsychicDice, \"UvKH7QtBPlzZAvXhbulmX+kcklg=\");\n\n_c = PsychicDice;\nexport default PsychicDice;\n\nvar _c;\n\n$RefreshReg$(_c, \"PsychicDice\");","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/41_React_Router/41.4_React_Context/deadly-doubles/src/PsychicDice.js"],"names":["React","useState","DiceSet","rollDice","PsychicDice","numDice","numSides","addWin","addLoss","gameState","vals","setVals","Array","fill","unrolled","setUnrolled","roll","evt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,WAAT,OAMG;AAAA;;AAAA,MANkB;AACnBC,IAAAA,OAAO,GAAG,CADS;AAEnBC,IAAAA,QAAQ,GAAG,CAFQ;AAGnBC,IAAAA,MAHmB;AAInBC,IAAAA,OAJmB;AAKnBC,IAAAA;AALmB,GAMlB;AACD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACW,KAAK,CAACP,OAAD,CAAL,CAAeQ,IAAf,EAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASe,IAAT,CAAcC,GAAd,EAAmB;AACjBN,IAAAA,OAAO,CAACR,QAAQ,CAACE,OAAD,EAAUC,QAAV,CAAT,CAAP;AACAS,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEL;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGD,SAAS,gBACR;AAAA,2BAAQA,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAENK,QAAQ,gBACV;AAAQ,QAAA,OAAO,EAAEE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,gBAGV;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAET,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhCQJ,W;;KAAAA,W;AAkCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport DiceSet from \"./DiceSet\";\nimport { rollDice } from \"./utils\";\n\n/** Psychic Dice: a simple dice-rolling \"game\".\n *\n * Dice are rolled; you indicate whether you psychically \"knew\" them or not\n *\n * Props:\n * - numDice: number of dice to roll\n * - numSides: number of sides on dice\n * - gameState: \"won\", \"lost\", or undefined (still being played)\n *\n * State:\n * - vals: values of dice\n *\n */\n\nfunction PsychicDice({\n  numDice = 3,\n  numSides = 6,\n  addWin,\n  addLoss,\n  gameState\n}) {\n  const [vals, setVals] = useState(Array(numDice).fill());\n  const [unrolled, setUnrolled] = useState(true);\n\n  function roll(evt) {\n    setVals(rollDice(numDice, numSides));\n    setUnrolled(false);\n  }\n\n  return (\n    <div className=\"PsychicDice\">\n      <DiceSet vals={vals} />\n      <div>\n        {gameState ? (\n          <b>You {gameState}!</b>\n        ) : unrolled ? (\n          <button onClick={roll}>Roll</button>\n        ) : (\n          <span>\n            <button onClick={addWin}>Yep!</button>\n            <button onClick={addLoss}>Nope!</button>\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PsychicDice;\n"]},"metadata":{},"sourceType":"module"}