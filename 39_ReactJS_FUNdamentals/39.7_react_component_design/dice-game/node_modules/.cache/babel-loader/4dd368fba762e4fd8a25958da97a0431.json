{"ast":null,"code":"import _slicedToArray from \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/39_ReactJS_FUNdamentals/39.7_react_component_design/dice-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/39_ReactJS_FUNdamentals/39.7_react_component_design/dice-game/src/Dice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dice.css\";\nimport Die from \"./Die.js\";\n/** A game can be any number of Dies, all with random values. */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dice(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(Array.from({\n    length: props.numDice\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValue = _useState2[1];\n  /** roll a new set of random numbers */\n\n\n  var roll = function roll() {\n    setValue(function (curValues) {\n      return curValues.map(function (n) {\n        return Math.floor(Math.random() * props.maxVal) + 1;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Dice\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: values.map(function (n) {\n        return /*#__PURE__*/_jsxDEV(Die, {\n          value: n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: roll,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Dice, \"EX7EWtESOgwucZq9z698mye1XzU=\");\n\n_c = Dice;\nDice.defaultProps = {\n  title: \"Main Game\",\n  numDice: 6,\n  maxVal: 20\n};\nexport default Dice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"sources":["/Users/brycebeckenbach/Desktop/Programming_Projects/Springboard/39_ReactJS_FUNdamentals/39.7_react_component_design/dice-game/src/Dice.js"],"names":["React","useState","Die","Dice","props","Array","from","length","numDice","values","setValue","roll","curValues","map","n","Math","floor","random","maxVal","title","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA;;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AAEnB,kBAA2BH,QAAQ,CAACI,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEH,KAAK,CAACI;AAAhB,GAAX,CAAD,CAAnC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,QAAf;AAEA;;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBD,IAAAA,QAAQ,CAAC,UAAAE,SAAS;AAAA,aACdA,SAAS,CAACC,GAAV,CAAc,UAAAC,CAAC;AAAA,eAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,KAAK,CAACc,MAAjC,IAA2C,CAA/C;AAAA,OAAf,CADc;AAAA,KAAV,CAAR;AAGD,GAJD;;AAMA,sBACI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACE;AAAA,gBAAKd,KAAK,CAACe;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGV,MAAM,CAACI,GAAP,CAAW,UAAAC,CAAC;AAAA,4BACT,QAAC,GAAD;AAAK,UAAA,KAAK,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,iBADS;AAAA,OAAZ;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAQ,MAAA,OAAO,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWD;;GAvBQR,I;;KAAAA,I;AAyBTA,IAAI,CAACiB,YAAL,GAAoB;AAClBD,EAAAA,KAAK,EAAE,WADW;AAElBX,EAAAA,OAAO,EAAE,CAFS;AAGlBU,EAAAA,MAAM,EAAE;AAHU,CAApB;AAMA,eAAef,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dice.css\";\nimport Die from \"./Die.js\";\n\n/** A game can be any number of Dies, all with random values. */\n\nfunction Dice(props) {\n\n  const [values, setValue] = useState(Array.from({ length: props.numDice }));\n\n  /** roll a new set of random numbers */\n\n  const roll = () => {\n    setValue(curValues =>\n        curValues.map(n => Math.floor(Math.random() * props.maxVal) + 1),\n    );\n  };\n\n  return (\n      <section className=\"Dice\">\n        <h1>{props.title}</h1>\n        <div>\n          {values.map(n => (\n              <Die value={n} />\n          ))}\n        </div>\n        <button onClick={roll}>Roll</button>\n      </section>\n  );\n}\n\nDice.defaultProps = {\n  title: \"Main Game\",\n  numDice: 6,\n  maxVal: 20,\n};\n\nexport default Dice;\n"]},"metadata":{},"sourceType":"module"}